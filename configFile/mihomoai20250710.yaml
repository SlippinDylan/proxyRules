# 机场订阅模板锚点定义
direct-provider-template: &directProvider {type: http, interval: 3600, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 180, lazy: false, tolerance: 10}, proxy: 🎯 国内直连, header: {User-Agent: ["Clash", "mihomo", "Clash.meta"]}, override: {udp: true, skip-cert-verify: true}}
proxy-provider-template: &proxyProvider {type: http, interval: 3600, health-check: {enable: true, url: "https://www.gstatic.com/generate_204", interval: 180, lazy: false, tolerance: 10}, proxy: 🧱 备份Smart, header: {User-Agent: ["Clash", "mihomo", "Clash.meta"]}, override: {udp: true, skip-cert-verify: true}}
# DNS服务器配置锚点定义
dns-servers:
  # 国内和国外DNS服务器配置
  domestic: &domestic-dns [https://doh.pub/dns-query, https://dns.alidns.com/dns-query]
  # 国外DNS服务器配置
  foreign: &foreign-dns [tls://8.8.8.8#🚀 翻墙代理, tls://1.1.1.1#🚀 翻墙代理&h3=true, "tls://[2001:4860:4860::8888]#🚀 翻墙代理", "tls://[2606:4700:4700::1111]#🚀 翻墙代理"]
  # 基础DNS服务器配置
  basic: &basic-dns [119.29.29.29, tls://223.5.5.5, tls://1.12.12.12, "tls://[2402:4e00::]", "tls://[2400:3200::1]"]
  # 直接DNS服务器配置
  direct: &direct-dns [119.29.29.29, 223.5.5.5]
# 节点配出规则锚点定义
filters:
  as: &as_filter "(?i)^.*(?=.*(香港|HK|Hong Kong|HongKong|🇭🇰|HKBN|HKT|PCCW|3HK|SmarTone|CSL|中国移动香港|CMHK|和记|Hutchison|台湾|TW|TWN|Taiwan|Taipei|HiNet|Taoyuan|Tainan|Taichung|🇹🇼|中华电信|CHT|台湾大哥大|TWM|远传|FET|亚太电信|APT|台湾固网|TFN|So-net|日本|JP|Japan|Tokyo|Osaka|🇯🇵|NTT|KDDI|SoftBank|IIJ|GMO|Sakura|BIGLOBE|OCN|Rakuten|BBiX|JPNE|ARTERIA|新加坡|狮城|Singapore|SG|🇸🇬|Singtel|StarHub|M1|MyRepublic|ViewQwest|SuperInternet|Pacific Internet|Starhub|韩国|韩|KR|Korea|Korean|Seoul|首尔|釜山|Busan|🇰🇷|KT|SKT|LG U\\+|LGU|KINX|Naver|Kakao|Dacom|Dreamline))(?!.*(家宽|家庭|住宅|home|🏠|家用|福利|新用户|邀请|网址|过期|剩余|套餐|更新|丢失|TG|频道|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).*$"
  ai: &ai_filter "(?i)^.*(?=.*(日本|JP|Japan|Tokyo|Osaka|🇯🇵|NTT|KDDI|SoftBank|IIJ|GMO|Sakura|BIGLOBE|OCN|Rakuten|BBiX|JPNE|ARTERIA|美国|USA|US|America|United States|🇺🇸|Verizon|AT&T|Comcast|Charter|CenturyLink|Cox|Spectrum|Xfinity|T-Mobile|Sprint|Level3|Cogent|QuadraNet|Psychz|Vultr|DigitalOcean|Linode|OVH|Choopa))(?!.*(家宽|家庭|住宅|home|🏠|家用|福利|新用户|邀请|网址|过期|剩余|套餐|更新|丢失|TG|频道|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).*$"
  us: &us_filter "(?i)^.*(?=.*(美国|USA|US|America|United States|🇺🇸|Verizon|AT&T|Comcast|Charter|CenturyLink|Cox|Spectrum|Xfinity|T-Mobile|Sprint|Level3|Cogent|QuadraNet|Psychz|Vultr|DigitalOcean|Linode|OVH|Choopa))(?!.*(家宽|家庭|住宅|home|🏠|家用|福利|新用户|邀请|网址|过期|剩余|套餐|更新|丢失|TG|频道|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).*$"
  nasia: &nasia_filter "(?i)^((?!(香港|HK|Hong Kong|HongKong|🇭🇰|HKBN|HKT|PCCW|3HK|SmarTone|CSL|中国移动香港|CMHK|和记|Hutchison|台湾|TW|TWN|Taiwan|Taipei|HiNet|Taoyuan|Tainan|Taichung|🇹🇼|中华电信|CHT|台湾大哥大|TWM|远传|FET|亚太电信|APT|台湾固网|TFN|So-net|日本|JP|Japan|Tokyo|Osaka|🇯🇵|NTT|KDDI|SoftBank|IIJ|GMO|Sakura|BIGLOBE|OCN|Rakuten|BBiX|JPNE|ARTERIA|新加坡|狮城|Singapore|SG|🇸🇬|Singtel|StarHub|M1|MyRepublic|ViewQwest|SuperInternet|Pacific Internet|Starhub|韩国|韩|KR|Korea|Korean|Seoul|首尔|釜山|Busan|🇰🇷|KT|SKT|LG U\\+|LGU|KINX|Naver|Kakao|Dacom|Dreamline|美国|USA|US|America|United States|🇺🇸|Verizon|AT&T|Comcast|Charter|CenturyLink|Cox|Spectrum|Xfinity|T-Mobile|Sprint|Level3|Cogent|QuadraNet|Psychz|Vultr|DigitalOcean|Linode|OVH|Choopa|家宽|家庭|住宅|home|🏠|家用|福利|新用户|邀请|网址|过期|剩余|套餐|更新|丢失|TG|频道|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).)*$"
  home: &home_filter "(?i)^.*(?=.*(家宽|家庭|住宅|home|🏠|家用))(?!.*(福利|新用户|邀请|网址|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍)).*$"
  all: &all_filter "^((?!(家宽|家庭|住宅|home|🏠|家用|福利|新用户|邀请|网址|过期|剩余|套餐|更新|丢失|TG|频道|com|0\\.[1-9]|[2-9](\\.\\d+)?倍|[1-9]\\d倍|直接|直连)).)*$"
policy-priorities:
  asia: &asia_priority "(?i)(香港|HK|Hong Kong|HongKong|🇭🇰|HKBN|HKT|PCCW|3HK|SmarTone|CSL|中国移动香港|CMHK|和记|Hutchison):1.5;(?i)(台湾|TW|TWN|Taiwan|Taipei|HiNet|Taoyuan|Tainan|Taichung|🇹🇼|中华电信|CHT|台湾大哥大|TWM|远传|FET|亚太电信|APT|台湾固网|TFN|So-net):1.2;(?i)(日本|JP|Japan|Tokyo|Osaka|🇯🇵|NTT|KDDI|SoftBank|IIJ|GMO|Sakura|BIGLOBE|OCN|Rakuten|BBiX|JPNE|ARTERIA):1.4;(?i)(新加坡|狮城|Singapore|SG|🇸🇬|Singtel|StarHub|M1|MyRepublic|ViewQwest|SuperInternet|Pacific Internet|Starhub):1.3;(?i)(韩国|韩|KR|Korea|Korean|Seoul|首尔|釜山|Busan|🇰🇷|KT|SKT|LG U\\+|LGU|KINX|Naver|Kakao|Dacom|Dreamline):1.1"
  ai: &ai_priority "(?i)(日本|JP|Japan|Tokyo|Osaka|🇯🇵|NTT|KDDI|SoftBank|IIJ|GMO|Sakura|BIGLOBE|OCN|Rakuten|BBiX|JPNE|ARTERIA):1.5;(?i)(美国|USA|US|America|United States|🇺🇸|Verizon|AT&T|Comcast|Charter|CenturyLink|Cox|Spectrum|Xfinity|T-Mobile|Sprint|Level3|Cogent|QuadraNet|Psychz|Vultr|DigitalOcean|Linode|OVH|Choopa):1.3"
  tg: &tg_priority "(?i)(新加坡|狮城|Singapore|SG|🇸🇬|Singtel|StarHub|M1|MyRepublic|ViewQwest|SuperInternet|Pacific Internet|Starhub):1.5;(?i)(香港|HK|Hong Kong|HongKong|🇭🇰|HKBN|HKT|PCCW|3HK|SmarTone|CSL|中国移动香港|CMHK|和记|Hutchison):1.3;(?i)(日本|JP|Japan|Tokyo|Osaka|🇯🇵|NTT|KDDI|SoftBank|IIJ|GMO|Sakura|BIGLOBE|OCN|Rakuten|BBiX|JPNE|ARTERIA):1.1;"
# 出站策略锚点定义
proxymain: &proxymain {type: select, proxies: [🪜 通用代理, 🏠 家宽节点, 🛰 全部节点, 🎯 国内直连]}
directmain: &directmain {type: select, proxies: [🎯 国内直连, 🪜 通用代理, 🏠 家宽节点, 🛰 全部节点]}
# 规则集锚点定义
rule-anchor:
  domain: &domain {type: http, interval: 21600, behavior: domain, format: mrs}
  class: &class {type: http, interval: 21600, behavior: classical, format: text}
  ip: &ip {type: http, interval: 21600, behavior: ipcidr, format: mrs}
# 机场订阅配置
proxy-providers:
  tkv:
    <<: *proxyProvider
    url: "订阅链接"
  xingheyun:
    <<: *directProvider
    url: "订阅链接"
  guar:
    <<: *directProvider
    url: "订阅链接"

# 节点信息
proxies: [{name: "直接连接", type: direct, udp: true}]
# 全局端口和网络配置
part1: {log-level: info, mode: rule, ipv6: true, port: 7890, unified-delay: true, tcp-concurrent: true, bind-address: "*", allow-lan: true}
# 系统和性能配置
part2: {find-process-mode: 'off', global-client-fingerprint: chrome, disable-keep-alive: false, keep-alive-interval: 15, keep-alive-idle: 600, profile: {store-selected: true, store-fake-ip: true, tracing: true, interval: 21600}}
# 入站配置
tun: {enable: true, stack: mixed, dns-hijack: ["any:53", "tcp://any:53"], auto-route: true, auto-redirect: true, auto-detect-interface: true}
# GeoX数据配置
part3: {geodata-mode: true, geodata-loader: standard, geox-url: {geosite: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geosite.dat", geoip-mmdb: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.metadb", geoip-dat: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/geoip-lite.dat", asn: "https://gh-proxy.com/https://github.com/MetaCubeX/meta-rules-dat/releases/download/latest/GeoLite2-ASN.mmdb"}, geox-auto-update: true, geox-update-interval: 24}

# 嗅探配置
sniffer:
  enable: true
  # 端口嗅探设置
  sniff: {
    HTTP: {ports: [80, 8080-8880], override-destination: true},
    TLS: {ports: [443, 8443], override-destination: true},
    QUIC: {ports: [443, 8443], override-destination: true}
  }
  # 嗅探的rule-set如果引用的规则集是 list 的，且其中有 IP，则直接报错
  skip-domain: [
    "+.push.apple.com", "+.apple.com", "+.wechat.com",
    "+.ntp", "+.time", "keyword:ntp", "keyword:time",
    "+.wechatapp.com", "+.qpic.cn", 
    "+.oray.com", "+.sunlogin.net", "Mijia Cloud",
    "+.tsinghua.edu.cn", "+.slippindylan.com","+.lan", "+.local", 
    "rule-set:cn_domain,private_domain,mine_torrent_domain,alibaba_domain,aliyun_domain,tencent_domain,xiaohongshu_domain,category_bank_cn,apple_domain,onedrive_domain,microsoft_cn_domain,synology_domain,speedtest_domain"
  ]
  force-domain: [
    "+.v2ex.com", "+.vivox.com", "+.msftconnecttest.com", "+.msftncsi.com",
    "start.me", "+.start.me", 
    "rule-set:mine_proxy,mine_intelligence,category_ai_chat_notcn_domain,mine_develop,docker_ocd_domain,linux_domain,category_dev_domain,developer_ocd_domain,microsoft_domain,youtube_domian,google_domain,telegram_domain,category_social_media_not_cn,category_communication,category_forums,spotify_domain,tiktok_domain,globalmedia_ocd_domain,category_media_domain,paypal_domain,proxy_domain,gfw_domain,geolocation_notcn_domain"
    ]

# DNS模块
dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  respect-rules: true
  # enable-dnssec: true
  doh-priority-http3: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-cache: true
  fake-ip-filter-mode: blacklist
  fake-ip-filter: [
    "+.services.googleapis.cn", "+.xn--ngstr-lra8j.com", 
    "keyword:ntp", "keyword:time", "+.ntp", "+.time", 
    "+.yarnpkg.com", "+.ustclug.org", "mirrors.vsean.net", "+.vsean.net", 
    "+.lan", "+.local", "geosite:cn", "+.slippindylan.com", 
    "rule-set:cn_domain,mine_direct,private_domain,mine_torrent_domain,docker_ocd_domain,category_dev_domain,developer_ocd_domain,linux_domain,mine_develop"
  ]
  # DNS服务器配置
  # 基础服务器 (default-nameserver): 用于解析 DNS 服务器自身的域名，必须是纯 IP 地址
  default-nameserver: *basic-dns
  # 直接 DNS 服务器 (direct-nameserver): 用于解析不经过代理的域名，必须是纯 IP 地址
  direct-nameserver: *direct-dns
  # 直接 DNS 服务器跟随策略 (direct-nameserver-follow-policy): 是否跟随规则中的 nameserver-policy
  direct-nameserver-follow-policy: false
  # 代理节点解析服务器 (proxy-server-nameserver): 用于解析代理节点的域名，需通过代理访问
  proxy-server-nameserver: *domestic-dns
  # 默认解析服务器 (nameserver): 处理大多数常规 DNS 查询
  nameserver: *domestic-dns
  nameserver-policy: {
    github.com: *foreign-dns, +.github.com: *foreign-dns, +.*.github.com: *foreign-dns, +.githubusercontent.com: *foreign-dns, +.debian.org: *foreign-dns, +.yarnpkg.com: *foreign-dns, +.ustclug.org: *foreign-dns, +.immortalwrt.org: *foreign-dns, +.openwrt.org: *foreign-dns, +.vsean.net: *foreign-dns,
    "rule-set:cn_domain,private_domain,mine_torrent_domain,alibaba_domain,aliyun_domain,tencent_domain,xiaohongshu_domain,category_bank_cn,apple_domain,onedrive_domain,microsoft_cn_domain,synology_domain,speedtest_domain": *domestic-dns,
    "rule-set:mine_proxy,mine_intelligence,category_ai_chat_notcn_domain,mine_develop,docker_ocd_domain,linux_domain,category_dev_domain,developer_ocd_domain,youtube_domian,google_domain,telegram_domain,category_social_media_not_cn,category_communication,category_forums,tiktok_domain,globalmedia_ocd_domain,category_media_domain,paypal_domain,proxy_domain,gfw_domain,geolocation_notcn_domain": *foreign-dns
  }

proxy-groups:
  # 核心代理策略组
  - {name: 🚀 翻墙代理, <<: *proxymain}
  - {name: 🎯 国内直连, type: select, proxies: [直接连接]}
  # 特定服务策略组
  - {name: 🍎 Apple, <<: *directmain}
  - {name:  ApplePxy, <<: *proxymain}
  - {name: ☁️ MicrosoftCN, <<: *directmain}
  - {name: Ⓜ️ Microsoft, <<: *proxymain}
  - {name: 🅖 Google, <<: *proxymain}
  - {name: 🛩️ Telegram, type: smart, use: [tkv], first-test: true, interval: 60, uselightgbm: false, collectdata: true, policy-priority: *tg_priority, filter: *as_filter}
  # 工具软件
  - {name: 🦑 Develop, <<: *proxymain}
  - {name: 🧠 Intelligence, type: select, proxies: [🤖 AISmart, 🏠 家宽节点, 🛰 全部节点]}
  - {name: 💰 Wallet, type: select, proxies: [🛰 全部节点, 🏠 家宽节点]}
  - {name: 📺 国外流媒体, <<: *proxymain}
  - {name: 🎵 Spotify, <<: *directmain}
  - {name: 🎶 TikTok, type: select, proxies: [🇺🇸 美国Smart, 🏠 家宽节点, 🛰 全部节点]}
  # 其他
  - {name: ⏱ Speedtest, <<: *directmain}
  - {name: 🐠 漏网之鱼, <<: *proxymain}

  # 智能代理策略组
  - {name: 🪜 通用代理, type: select, proxies: [🌏 亚洲Smart, 🧱 备份Smart, 🏠 家宽节点, 🌍 环球节点, 🛰 全部节点]}
  - {name: 🌏 亚洲Smart, type: smart, use: [tkv], first-test: true, interval: 60, uselightgbm: false, collectdata: true, policy-priority: *asia_priority, filter: *as_filter}
  - {name: 🤖 AISmart, type: smart, use: [tkv], first-test: true, interval: 60, uselightgbm: false, collectdata: true, policy-priority: *ai_priority, filter: *ai_filter}
  - {name: 🇺🇸 美国Smart, type: smart, use: [tkv], first-test: true, interval: 60, uselightgbm: false, collectdata: true, filter: *us_filter}
  - {name: 🧱 备份Smart, type: smart, include-all: true, first-test: true, interval: 60, uselightgbm: false, collectdata: true, policy-priority: *asia_priority, filter: *all_filter}
  - {name: 🏠 家宽节点, type: select, include-all: true, first-test: true, interval: 60, filter: *home_filter}
  - {name: 🌍 环球节点, type: select, include-all: true, first-test: true, interval: 60, filter: *nasia_filter}
  - {name: 🛰 全部节点, type: select, include-all: true, first-test: true, interval: 60, filter: *all_filter}

# 规则匹配
rules:
  # 内网&本机服务代理
  - DST-PORT,123,DIRECT
  - DOMAIN-KEYWORD,ntp,DIRECT
  - DOMAIN-KEYWORD,time,DIRECT
  - SRC-IP-CIDR,127.0.0.1/32,🚀 翻墙代理
  - SRC-IP-CIDR,10.10.0.1/32,🚀 翻墙代理
  # 隐私保护
  - RULE-SET,private_domain,🎯 国内直连
  # 个性化服务
  - RULE-SET,mine_proxy,🚀 翻墙代理
  - RULE-SET,mine_direct,🎯 国内直连
  - RULE-SET,mine_torrent_domain,🎯 国内直连
  
  # 大陆直连
  - RULE-SET,alibaba_domain,🎯 国内直连
  - RULE-SET,aliyun_domain,🎯 国内直连
  - RULE-SET,tencent_domain,🎯 国内直连
  - RULE-SET,xiaohongshu_domain,🎯 国内直连
  - RULE-SET,category_bank_cn,🎯 国内直连

  # AI和智能服务
  - RULE-SET,mine_intelligence,🧠 Intelligence
  - RULE-SET,category_ai_chat_notcn_domain,🧠 Intelligence
  
  # 开发
  - RULE-SET,mine_develop,🦑 Develop
  - RULE-SET,docker_ocd_domain,🦑 Develop
  - RULE-SET,linux_domain,🦑 Develop
  - RULE-SET,category_dev_domain,🦑 Develop
  - RULE-SET,developer_ocd_domain,🦑 Develop
  
  - RULE-SET,apple_domain,🍎 Apple
  - RULE-SET,apple_notcn_domain, ApplePxy
  - RULE-SET,onedrive_domain,☁️ MicrosoftCN
  - RULE-SET,microsoft_cn_domain,☁️ MicrosoftCN
  - RULE-SET,microsoft_domain,Ⓜ️ Microsoft
  - RULE-SET,youtube_domian,📺 国外流媒体
  - RULE-SET,google_domain,🅖 Google

  # 社交
  - RULE-SET,telegram_domain,🛩️ Telegram
  - RULE-SET,category_social_media_not_cn,🛩️ Telegram
  - RULE-SET,category_communication,🛩️ Telegram
  - RULE-SET,category_forums,🛩️ Telegram
  
  - RULE-SET,spotify_domain,🎵 Spotify
  - RULE-SET,tiktok_domain,🎶 TikTok
  - RULE-SET,globalmedia_ocd_domain,📺 国外流媒体
  - RULE-SET,category_media_domain,📺 国外流媒体

  - RULE-SET,synology_domain,🎯 国内直连
  - RULE-SET,paypal_domain,💰 Wallet
  - RULE-SET,speedtest_domain,⏱ Speedtest

  # 全局代理
  - RULE-SET,proxy_domain,🚀 翻墙代理
  - RULE-SET,gfw_domain,🚀 翻墙代理
  - RULE-SET,geolocation_notcn_domain,🚀 翻墙代理
  - RULE-SET,cn_domain,🎯 国内直连

  # IP规则
  - RULE-SET,apple_ip,🍎 Apple
  - RULE-SET,globalmedia_ocd_ip,📺 国外流媒体,no-resolve
  - RULE-SET,google_ip,🅖 Google,no-resolve
  - RULE-SET,telegram_ip,🛩️ Telegram,no-resolve
  - RULE-SET,mine_torrent_ip,🎯 国内直连
  - RULE-SET,cn_ip,🎯 国内直连
  - MATCH,🐠 漏网之鱼

rule-providers:
  # 基础网络和隐私规则
  private_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  # AI & 开发
  category_ai_chat_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.mrs"}
  docker_ocd_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Docker/Docker_OCD_Domain.mrs"}
  linux_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/linux.mrs"}
  category_dev_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-dev.mrs"}
  developer_ocd_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Developer/Developer_OCD_Domain.mrs"}
  
  # 互联网(国外)
  apple_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs"}
  apple_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geoip/apple.mrs"}
  apple_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple%40cn.mrs"}
  onedrive_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft%40cn.mrs"}
  microsoft_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  youtube_domian: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  google_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  # 互联网(国内)
  alibaba_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/alibaba.mrs"}
  aliyun_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/aliyun.mrs"}
  tencent_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tencent.mrs"}
  xiaohongshu_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/xiaohongshu.mrs"}

  # 社交
  telegram_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  telegram_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  category_social_media_not_cn: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-social-media-!cn.mrs"}
  category_communication: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-communication.mrs"}
  category_forums: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-forums.mrs"}
  
  # 流媒体服务
  spotify_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/spotify.mrs"}
  tiktok_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  globalmedia_ocd_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_Domain.mrs"}
  globalmedia_ocd_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GlobalMedia/GlobalMedia_OCD_IP.mrs"}
  category_media_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-media.mrs"}
  
  # 金融服务
  paypal_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  category_bank_cn: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-bank-cn.mrs"}
  
  # 工具和实用服务
  synology_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/synology.mrs"}
  speedtest_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/speedtest.mrs"}
  
  # 全局代理
  proxy_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo-lite/geosite/proxy.mrs"}
  gfw_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation_notcn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}

  # 个人代理
  mine_intelligence: { <<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/list/intelligence.list"}
  mine_develop: { <<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/list/develop.list"}
  mine_proxy: { <<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/list/proxy.list"}
  # 个人直连
  mine_direct: { <<: *class, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/list/direct.list"}
  mine_torrent_domain: { <<: *domain, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/mrs/torrent_domain.mrs"}
  mine_torrent_ip: { <<: *ip, url: "https://gh-proxy.com/raw.githubusercontent.com/SlippinDylan/proxyRules/master/ruleProvider/mrs/torrent_ip.mrs"}

hosts: {"*.slippindylan.com": 10.10.0.51}